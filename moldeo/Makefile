# Makefile.in generated by automake 1.11.6 from Makefile.am.
# moldeo/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/moldeo
pkgincludedir = $(includedir)/moldeo
pkglibdir = $(libdir)/moldeo
pkglibexecdir = $(libexecdir)/moldeo
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = moldeo
DIST_COMMON = $(libmoldeo_1_0_la_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(libmoldeo_1_0_ladir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libmoldeo_1_0_la_LIBADD =
am__objects_1 =
am_libmoldeo_1_0_la_OBJECTS = $(am__objects_1) mo3dModelManager.lo \
	moAbstract.lo moArray.lo moBuckets.lo moConfig.lo \
	moConnectionHandler.lo moConsole.lo moConsoleState.lo \
	moCurve.lo moDeviceCode.lo moDsGraph.lo moEffect.lo \
	moEffectState.lo moEventList.lo moFontManager.lo \
	moGUIManager.lo moImages.lo moIODeviceManager.lo moKeyboard.lo \
	moLive.lo moLock.lo moLuaBase.lo moMasterEffect.lo \
	moMasterPlugin.lo moMidi.lo moMixer.lo moMoldeoObject.lo \
	moMotion.lo moMouse.lo moNetTCPIn.lo moNetTCPOut.lo \
	moNetUDPIn.lo moNetUDPOut.lo moOGLFT.lo moParam.lo moPlugin.lo \
	moPostEffect.lo moPostPlugin.lo moPreConfig.lo moPreEffect.lo \
	moPrePlugin.lo moPresets.lo moRenderManager.lo \
	moResourceManager.lo moSceneEffect.lo moScript.lo \
	moScriptManager.lo moSequenceEffect.lo moShaderCG.lo \
	moShader.lo moShaderGLSL.lo moSoundManager.lo moText.lo \
	moTextureManager.lo moThread.lo moTracker.lo moTypes.lo \
	moVideoGraph.lo moXmlConfig.lo GLee.lo 3ds.lo
libmoldeo_1_0_la_OBJECTS = $(am_libmoldeo_1_0_la_OBJECTS)
libmoldeo_1_0_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libmoldeo_1_0_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libmoldeo_1_0_la_SOURCES)
DIST_SOURCES = $(libmoldeo_1_0_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(libmoldeo_1_0_la_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/xaiki/src/TV/moldeo/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AM_CFLAGS = 
AM_LDFLAGS = 
AR = ar
AUTOCONF = ${SHELL} /home/xaiki/src/TV/moldeo/missing --run autoconf
AUTOHEADER = ${SHELL} /home/xaiki/src/TV/moldeo/missing --run autoheader
AUTOMAKE = ${SHELL} /home/xaiki/src/TV/moldeo/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"Moldeo\" -DPACKAGE_TARNAME=\"moldeo\" -DPACKAGE_VERSION=\"0.7\" -DPACKAGE_STRING=\"Moldeo\ 0.7\" -DPACKAGE_BUGREPORT=\"contact@moldeo.coop\" -DPACKAGE_URL=\"\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\"
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FREETYPE_CFLAGS = -I/usr/include/freetype2  
FREETYPE_LIBS = -lfreetype  
GLU_CFLAGS =  
GLU_LIBS = -lGLU -lGL  
GL_CFLAGS =  
GL_LIBS = -lGL  
GREP = /bin/grep
GTK_REQUIRED_VERSION = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTROSPECTION_REQUIRED_VERSION = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LUA_CFLAGS = -I/usr/include/lua5.1  
LUA_LIBS = -llua5.1  
MAINT = 
MAKEINFO = ${SHELL} /home/xaiki/src/TV/moldeo/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MOLDEO_LT_AGE = 0
MOLDEO_LT_CURRENT = 1
MOLDEO_LT_REVISION = 0
MOLDEO_VERSION = 0.7.3
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = moldeo
PACKAGE_BUGREPORT = contact@moldeo.coop
PACKAGE_NAME = Moldeo
PACKAGE_STRING = Moldeo 0.7
PACKAGE_TARNAME = moldeo
PACKAGE_URL = 
PACKAGE_VERSION = 0.7
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = ranlib
SDL_CFLAGS = -D_GNU_SOURCE=1 -D_REENTRANT -I/usr/include/SDL  
SDL_IMAGE_CFLAGS = -D_GNU_SOURCE=1 -D_REENTRANT -I/usr/include/SDL  
SDL_IMAGE_LIBS = -lSDL_image -lSDL  
SDL_LIBS = -lSDL  
SDL_NET_CFLAGS = -D_GNU_SOURCE=1 -D_REENTRANT -I/usr/include/SDL  
SDL_NET_LIBS = -lSDL_net -lSDL  
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
TINYXML_CFLAGS =  
TINYXML_LIBS = -ltinyxml  
VERSION = 0.7
abs_builddir = /home/xaiki/src/TV/moldeo/moldeo
abs_srcdir = /home/xaiki/src/TV/moldeo/moldeo
abs_top_builddir = /home/xaiki/src/TV/moldeo
abs_top_srcdir = /home/xaiki/src/TV/moldeo
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/xaiki/src/TV/moldeo/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

# additional include paths necessary to compile the C++ library
AM_CPPFLAGS = -I$(top_srcdir)/src  -D_GNU_SOURCE=1 -D_REENTRANT -I/usr/include/SDL   -D_GNU_SOURCE=1 -D_REENTRANT -I/usr/include/SDL   -D_GNU_SOURCE=1 -D_REENTRANT -I/usr/include/SDL       -I/usr/include/lua5.1   -I/usr/include/freetype2    
libmoldeo_CPPFLAGS = $(SDL_CFLAGS) $(SDL_IMAGE_CFLAGS) $(SDL_NET_CFLAGS) $(GL_CFLAGS) $(GLU_CFLAGS) $(LUA_CFLAGS) $(FREETYPE_CFLAGS) $(TINYXML_CFLAGS)
libmoldeo_LIBS = $(SDL_LIBS) $(SDL_IMAGE_LIBS) $(SDL_NET_LIBS) $(GL_LIBS) $(GLU_LIBS) $(LUA_LIBS) $(FREETYPE_LIBS) $(TINYXML_LIBS)

# the library names to build (note we are building static libs only)
lib_LTLIBRARIES = libmoldeo-1.0.la

# where to install the headers on the system
libmoldeo_1_0_ladir = $(includedir)/moldeo

# the list of header files that belong to the library (to be installed later)
libmoldeo_1_0_la_HEADERS = \
	mo3dModelManager.h \
	moAbstract.h \
	moActions.h \
	moArcBall.h \
	moArray.h \
	moBasePlugin.h \
	moBuckets.h \
	moConfig.h \
	moConnectors.h \
	moConsole.h \
	moConsoleState.h \
	moDataManager.h \
	moDebugManager.h \
	moDecoderManager.h \
	moDeviceCode.h \
	moDsGraph.h \
	moEffect.h \
	moEffectManager.h \
	moEffectState.h \
	moEffectTemplate.h \
	moEventList.h \
	moFBManager.h \
	moFBO.h \
	moFileManager.h \
	moFileRead.h \
	moFileWrite.h \
	moFilterManager.h \
	moFontManager.h \
	moGLManager.h \
	moGsGraph.h \
	moGUIManager.h \
	moIODeviceManager.h \
	moIODevicePlugin.h \
	moldeo.h \
	moLock.h \
	moLuaBase.h \
	moLunaClasses.h \
	moLuna.h \
	moMasterEffect.h \
	moMasterPlugin.h \
	moMathCurve.h \
	moMathDMatrix.h \
	moMathDVector.h \
	moMathFFT.h \
	moMathFunction.h \
	moMathFunctionIndex.h \
	moMath.h \
	moMathManager.h \
	moMathMatrix.h \
	moMathNumericalAnalysis.h \
	moMathPolynomial.h \
	moMathQuaternion.h \
	moMathVector3.h \
	moMathVector4.h \
	moMathVector.h \
	moMoldeoObject.h \
	moMotion.h \
	moNetManager.h \
	moP5.h \
	moParam.h \
	moPlugin.h \
	moPostEffect.h \
	moPostPlugin.h \
	moPreConfig.h \
	moPreEffect.h \
	moPrePlugin.h \
	moPresets.h \
	moRenderManager.h \
	moResourceManager.h \
	moResourcePlugin.h \
	moSceneEffect.h \
	moScript.h \
	moScriptManager.h \
	moSequenceEffect.h \
	moShaderCG.h \
	moShaderGLSL.h \
	moShader.h \
	moShaderManager.h \
	moSoundManager.h \
	moTempo.h \
	moTextFilterParam.h \
	moText.h \
	moTextureFilter.h \
	moTextureFilterIndex.h \
	moTexture.h \
	moTextureIndex.h \
	moTextureManager.h \
	moThread.h \
	moTimeManager.h \
	moTypes.h \
	moValue.h \
	moVdpauGraph.h \
	moVideoGraph.h \
	moVideoManager.h \
	moXmlConfig.h \
	${NULL}


# the sources to add to the library and to add to the source distribution
libmoldeo_1_0_la_SOURCES = $(libmoldeo_1_0_la_HEADERS) \
	mo3dModelManager.cpp \
	moAbstract.cpp \
	moArray.cpp \
	moBuckets.cpp \
	moConfig.cpp \
	moConnectionHandler.cpp \
	moConsole.cpp \
	moConsoleState.cpp \
	moCurve.cpp \
	moDeviceCode.cpp \
	moDsGraph.cpp \
	moEffect.cpp \
	moEffectState.cpp \
	moEventList.cpp \
	moFontManager.cpp \
	moGUIManager.cpp \
	moImages.cpp \
	moIODeviceManager.cpp \
	moKeyboard.cpp \
	moLive.cpp \
	moLock.cpp \
	moLuaBase.cpp \
	moMasterEffect.cpp \
	moMasterPlugin.cpp \
	moMidi.cpp \
	moMixer.cpp \
	moMoldeoObject.cpp \
	moMotion.cpp \
	moMouse.cpp \
	moNetTCPIn.cpp \
	moNetTCPOut.cpp \
	moNetUDPIn.cpp \
	moNetUDPOut.cpp \
	moOGLFT.cpp \
	moParam.cpp \
	moPlugin.cpp \
	moPostEffect.cpp \
	moPostPlugin.cpp \
	moPreConfig.cpp \
	moPreEffect.cpp \
	moPrePlugin.cpp \
	moPresets.cpp \
	moRenderManager.cpp \
	moResourceManager.cpp \
	moSceneEffect.cpp \
	moScript.cpp \
	moScriptManager.cpp \
	moSequenceEffect.cpp \
	moShaderCG.cpp \
	moShader.cpp \
	moShaderGLSL.cpp \
	moSoundManager.cpp \
	moText.cpp \
	moTextureManager.cpp \
	moThread.cpp \
	moTracker.cpp \
	moTypes.cpp \
	moVideoGraph.cpp \
	moXmlConfig.cpp \
	glee/GLee.c \
	3ds/3ds.cpp \
	${NULL}

libmoldeo_1_0_la_LDFLAGS = -no-undefined -version-info 1:0:0
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu moldeo/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu moldeo/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libmoldeo-1.0.la: $(libmoldeo_1_0_la_OBJECTS) $(libmoldeo_1_0_la_DEPENDENCIES) $(EXTRA_libmoldeo_1_0_la_DEPENDENCIES) 
	$(libmoldeo_1_0_la_LINK) -rpath $(libdir) $(libmoldeo_1_0_la_OBJECTS) $(libmoldeo_1_0_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/3ds.Plo
include ./$(DEPDIR)/GLee.Plo
include ./$(DEPDIR)/mo3dModelManager.Plo
include ./$(DEPDIR)/moAbstract.Plo
include ./$(DEPDIR)/moArray.Plo
include ./$(DEPDIR)/moBuckets.Plo
include ./$(DEPDIR)/moConfig.Plo
include ./$(DEPDIR)/moConnectionHandler.Plo
include ./$(DEPDIR)/moConsole.Plo
include ./$(DEPDIR)/moConsoleState.Plo
include ./$(DEPDIR)/moCurve.Plo
include ./$(DEPDIR)/moDeviceCode.Plo
include ./$(DEPDIR)/moDsGraph.Plo
include ./$(DEPDIR)/moEffect.Plo
include ./$(DEPDIR)/moEffectState.Plo
include ./$(DEPDIR)/moEventList.Plo
include ./$(DEPDIR)/moFontManager.Plo
include ./$(DEPDIR)/moGUIManager.Plo
include ./$(DEPDIR)/moIODeviceManager.Plo
include ./$(DEPDIR)/moImages.Plo
include ./$(DEPDIR)/moKeyboard.Plo
include ./$(DEPDIR)/moLive.Plo
include ./$(DEPDIR)/moLock.Plo
include ./$(DEPDIR)/moLuaBase.Plo
include ./$(DEPDIR)/moMasterEffect.Plo
include ./$(DEPDIR)/moMasterPlugin.Plo
include ./$(DEPDIR)/moMidi.Plo
include ./$(DEPDIR)/moMixer.Plo
include ./$(DEPDIR)/moMoldeoObject.Plo
include ./$(DEPDIR)/moMotion.Plo
include ./$(DEPDIR)/moMouse.Plo
include ./$(DEPDIR)/moNetTCPIn.Plo
include ./$(DEPDIR)/moNetTCPOut.Plo
include ./$(DEPDIR)/moNetUDPIn.Plo
include ./$(DEPDIR)/moNetUDPOut.Plo
include ./$(DEPDIR)/moOGLFT.Plo
include ./$(DEPDIR)/moParam.Plo
include ./$(DEPDIR)/moPlugin.Plo
include ./$(DEPDIR)/moPostEffect.Plo
include ./$(DEPDIR)/moPostPlugin.Plo
include ./$(DEPDIR)/moPreConfig.Plo
include ./$(DEPDIR)/moPreEffect.Plo
include ./$(DEPDIR)/moPrePlugin.Plo
include ./$(DEPDIR)/moPresets.Plo
include ./$(DEPDIR)/moRenderManager.Plo
include ./$(DEPDIR)/moResourceManager.Plo
include ./$(DEPDIR)/moSceneEffect.Plo
include ./$(DEPDIR)/moScript.Plo
include ./$(DEPDIR)/moScriptManager.Plo
include ./$(DEPDIR)/moSequenceEffect.Plo
include ./$(DEPDIR)/moShader.Plo
include ./$(DEPDIR)/moShaderCG.Plo
include ./$(DEPDIR)/moShaderGLSL.Plo
include ./$(DEPDIR)/moSoundManager.Plo
include ./$(DEPDIR)/moText.Plo
include ./$(DEPDIR)/moTextureManager.Plo
include ./$(DEPDIR)/moThread.Plo
include ./$(DEPDIR)/moTracker.Plo
include ./$(DEPDIR)/moTypes.Plo
include ./$(DEPDIR)/moVideoGraph.Plo
include ./$(DEPDIR)/moXmlConfig.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

GLee.lo: glee/GLee.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT GLee.lo -MD -MP -MF $(DEPDIR)/GLee.Tpo -c -o GLee.lo `test -f 'glee/GLee.c' || echo '$(srcdir)/'`glee/GLee.c
	$(am__mv) $(DEPDIR)/GLee.Tpo $(DEPDIR)/GLee.Plo
#	source='glee/GLee.c' object='GLee.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o GLee.lo `test -f 'glee/GLee.c' || echo '$(srcdir)/'`glee/GLee.c

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

3ds.lo: 3ds/3ds.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3ds.lo -MD -MP -MF $(DEPDIR)/3ds.Tpo -c -o 3ds.lo `test -f '3ds/3ds.cpp' || echo '$(srcdir)/'`3ds/3ds.cpp
	$(am__mv) $(DEPDIR)/3ds.Tpo $(DEPDIR)/3ds.Plo
#	source='3ds/3ds.cpp' object='3ds.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3ds.lo `test -f '3ds/3ds.cpp' || echo '$(srcdir)/'`3ds/3ds.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-libmoldeo_1_0_laHEADERS: $(libmoldeo_1_0_la_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(libmoldeo_1_0_la_HEADERS)'; test -n "$(libmoldeo_1_0_ladir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libmoldeo_1_0_ladir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libmoldeo_1_0_ladir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libmoldeo_1_0_ladir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libmoldeo_1_0_ladir)" || exit $$?; \
	done

uninstall-libmoldeo_1_0_laHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libmoldeo_1_0_la_HEADERS)'; test -n "$(libmoldeo_1_0_ladir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libmoldeo_1_0_ladir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libmoldeo_1_0_ladir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-libmoldeo_1_0_laHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES \
	uninstall-libmoldeo_1_0_laHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-libmoldeo_1_0_laHEADERS \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-libLTLIBRARIES \
	uninstall-libmoldeo_1_0_laHEADERS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
